name: Build and test

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - develop
      - test-update-pybind11
  schedule:
    # 03:00 every Saturday morning
    - cron: '0 3 * * 6'
  workflow_dispatch: {}

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check_changes:
    name: Check tket library version
    runs-on: ubuntu-22.04
    outputs:
      tket_or_workflow_changed: ${{ steps.filter.outputs.tket_or_workflow }}
      tket_changed: ${{ steps.filter.outputs.tket }}
      doxyfile_or_workflow_changed: ${{ steps.filter.outputs.doxyfile_or_workflow }}
      pytket_or_workflow_changed: ${{ steps.filter.outputs.pytket_or_workflow }}
      tket_ver: ${{ steps.tket_ver.outputs.tket_ver }}
      tket_package_exists: ${{ steps.tket_package_exists.outputs.tket_package_exists }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - uses: dorny/paths-filter@v3.0.2
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          tket:
            - '{tket/src/**,tket/include/**,tket/conanfile.py,tket/CMakeLists.txt,tket/cmake/**,tket/test/**,tket/proptest/**}'
          tket_or_workflow:
            - '{tket/src/**,tket/include/**,tket/conanfile.py,tket/CMakeLists.txt,tket/cmake/**,tket/test/**,tket/proptest/**}'
            - '.github/workflows/build_and_test.yml'
          doxyfile_or_workflow:
            - '{tket/Doxyfile}'
            - '.github/workflows/build_and_test.yml'
          pytket_or_workflow:
            - 'pytket/**'
            - '.github/workflows/build_and_test.yml'
    - name: Install conan
      uses: turtlebrowser/get-conan@v1.2
    - name: parse version from conanfile
      id: tket_ver
      run: |
        tket_ver=$(conan inspect tket/conanfile.py | grep "^version: " | awk '{print $2}')
        echo "tket_ver=${tket_ver}" >> $GITHUB_OUTPUT
    - name: See if version exists on remote
      id: test_package_exists
      run: |
        conan remote add tket-libs https://quantinuumsw.jfrog.io/artifactory/api/conan/tket1-libs --index 0
        tket_package_exists=`conan search -r tket-libs "tket/${{ steps.tket_ver.outputs.tket_ver }}@tket/stable" | grep "not found" > /dev/null 2>&1 && echo false || echo true`
        echo "tket_package_exists=${tket_package_exists}" >> $GITHUB_OUTPUT
    - name: Check tket version bump
      if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'develop' && steps.filter.outputs.tket == 'true' && steps.test_package_exists.outputs.tket_package_exists == 'true'
      run: exit 1

  check_docs_tket:
    name: Check documentation build
    needs: check_changes
    if: needs.check_changes.outputs.tket_or_workflow_changed == 'true' || needs.check_changes.outputs.doxyfile_or_workflow_changed == 'true'
    runs-on: 'ubuntu-22.04'
    steps:
      - uses: actions/checkout@v4
      - name: Check doxygen
        run: |
          sudo apt install -y doxygen graphviz
          cd tket && doxygen

  check_format_tket:
    name: Check C++ code formatting
    needs: check_changes
    if: needs.check_changes.outputs.tket_or_workflow_changed == 'true'
    runs-on: 'macos-12'
    steps:
      - uses: actions/checkout@v4
      - name: Check C++ code formatting
        run: |
          brew update
          brew install clang-format@18
          git ls-files "*.cpp" "*.hpp" | xargs clang-format -style=file --dry-run --Werror

  build_test_pytket_macos:
    name: Build and test pytket (macos)
    needs: check_changes
    if: needs.check_changes.outputs.tket_or_workflow_changed == 'true' || needs.check_changes.outputs.pytket_or_workflow_changed == 'true'
    strategy:
      matrix:
        os: ['macos-13-xlarge']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Select Python 3.11
      # otherwise turtlebrowser/get-conan@v1.2 fails on macos-12
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install conan
      uses: turtlebrowser/get-conan@v1.2
    - name: Set up conan
      run: |
        conan profile detect
        DEFAULT_PROFILE_PATH=`conan profile path default`
        PROFILE_PATH=./conan-profiles/${{ matrix.os }}
        diff ${DEFAULT_PROFILE_PATH} ${PROFILE_PATH} || true
        cp ${PROFILE_PATH} ${DEFAULT_PROFILE_PATH}
        conan remote add tket-libs https://quantinuumsw.jfrog.io/artifactory/api/conan/tket1-libs --index 0
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: tket-dynamic-macos-12
    - name: further ccache config
      run: |
        ccache --set-config base_dir=${HOME}
        ccache --set-config compiler_check=content
        ccache -p
    - name: Build tket
      if: needs.check_changes.outputs.tket_changed == 'true'
      run: conan create tket --user tket --channel stable -o boost/*:header_only=True -o tklog/*:shared=True -o tket/*:shared=True -tf ""
    - name: Install tket
      if: needs.check_changes.outputs.tket_changed != 'true'
      run: conan install --requires tket/${{ needs.check_changes.outputs.tket_ver }}@tket/stable -o boost/*:header_only=True -o tklog/*:shared=True -o tket/*:shared=True
    - name: check that version is consistent
      if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
      run: ./.github/workflows/check-tket-reqs  ${{ needs.check_changes.outputs.tket_ver }}
    - name: Install pytket requirements
      run: |
        conan create recipes/pybind11
        conan create recipes/pybind11_json/all --version 0.2.13
    - name: Set up Python (pull request)
      if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Set up Python (push)
      if: github.event_name == 'push'
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Set up Python (schedule)
      if: github.event_name == 'schedule'
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Build pytket
      run: |
        cd pytket
        python -m pip install -e .[ZX] -v
    - name: Run doctests
      run: |
        cd pytket
        python -m pip install pytest
        python -m pytest --doctest-modules pytket
    - name: Test pytket
      run: |
        cd pytket/tests
        python -m pip install -r requirements.txt
        python -m pytest --ignore=simulator/
    - name: Check type stubs are up-to-date and run mypy
      if: matrix.os == 'macos-13-xlarge'
      run: |
        python -m pip install -U mypy pybind11-stubgen
        cd pytket
        ./stub_generation/regenerate_stubs
        git diff pytket/_tket && echo "Stubs are up-to-date" || exit 1  # fail if stubs change after regeneration
        python -m mypy --config-file=mypy.ini --no-incremental -p pytket -p tests
    - name: Upload package
      if: github.event_name == 'push' && github.ref == 'refs/heads/develop' && needs.check_changes.outputs.tket_changed == 'true'
      run: |
        conan remote login -p ${{ secrets.JFROG_ARTIFACTORY_TOKEN_3 }} tket-libs ${{ secrets.JFROG_ARTIFACTORY_USER_3 }}
        conan upload tket/${{ needs.check_changes.outputs.tket_ver }}@tket/stable -r=tket-libs
